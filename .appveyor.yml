os: unstable

environment:
  matrix:
    - JULIAVERSION: "WOWOWEWO"
branches:
  only:
    - master

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

before_build:
  - cmd: ECHO this is batch  %APPVEYOR_ACCOUNT_NAME%
  - cmd: ECHO this is batch  %APPVEYOR_PROJECT_NAME%
  - ls -l
  - uname -a

platform: x86
#build:
#  - ls -l
#  - PS: Exit-AppVeyorBuild
  
install:
  - appveyor DownloadFile https://cygwin.com/setup-x86.exe -FileName C:\cygwin\setup-x86.exe
  - C:\cygwin\setup-x86.exe -qnNdO -R C:/cygwin -s http://cygwin.mirror.constant.com -l C:/cygwin/var/cache/setup -P mingw64-i686-gcc-g++ -P mingw64-x86_64-gcc- -P autotools -P autoconf -P autoreconf -P automake -P bison -P libtool -P make -P gettext-devel -P intltool -P libiconv -P pkg-config 
  
build_script:
  - perl -version
  - cd ./bng2/Network3 && mkdir -p m4 && cd .. && perl make_dist.pl --build --validate
before_deploy:
  - cd BioNetGen-2.3.0/Network3 && make clean && cd ../../.. && mkdir dist && mv ./bng2/BioNetGen-2.3.0 ./dist/$TRAVIS_OS_NAME && cd dist && tar cf $TRAVIS_OS_NAME.tar $TRAVIS_OS_NAME && gzip $TRAVIS_OS_NAME.tar && rm -rf $TRAVIS_OS_NAME && cd ..
deploy:
#install:
# If there's a newer build queued for the same PR, cancel this one
#  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
#        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
#        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
#        throw "There are newer queued builds for this pull request, failing early." }
# Download most recent Julia Windows binary
#  - ps: (new-object net.webclient).DownloadFile(
#        $("http://s3.amazonaws.com/"+$env:JULIAVERSION),
#        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
#  - C:\projects\julia-binary.exe /S /D=C:\projects\julia


# Need to convert from shallow to complete for Pkg.clone to work
#  - IF EXIST .git\shallow (git fetch --unshallow)
#  - C:\projects\julia\bin\julia -e "versioninfo();
#      Pkg.clone(pwd(), \"Sundials\"); Pkg.build(\"Sundials\")"

#test_script:
#- C:\projects\julia\bin\julia --check-bounds=yes -e "Pkg.test(\"Sundials\")"
